
[project]
name = "ainconv"
version = "0.6.0"
description = "Converts Ainu text between different scripts (Katakana, Latin, Cyrillic and more)"
authors = [{ name = "mkpoli", email = "mkpoli@mkpo.li" }]
license = { file = "LICENSE" }
requires-python = "<4.0,>=3.9"
dependencies = ["more-itertools<11.0.0,>=10.2.0"]
readme = "README.md"
keywords = [
    "ainu",
    "converter",
    "katakana",
    "latin",
    "cyrillic",
    "language",
    "writing system",
    "text preprocessing",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Topic :: Text Processing",
]

[project.urls]
repository = "https://github.com/mkpoli/ainconv"
documentation = "https://ainconv-py.readthedocs.io/en/latest/"

[tool.poe.tasks]
doc-freeze = "uv export --format requirements.txt --output docs/requirements.txt --without-hashes --with dev"
test = "pytest"
build_package = "uv build"
check_deps = "uv run scripts/check_deps.py"
tag = "uv run scripts/tag_with_changelog.py"
bump = "uv run scripts/bump_interactive.py"
build = ["test", "check_deps", "build_package"]

[tool.uv]
dev-dependencies = [
    "pytest<9.0.0,>=8.0.2",
    "myst-parser<3.0.0,>=2.0.0",
    "sphinx<8.0.0,>=7.2.6",
    "furo<2025.0.0,>=2024.1.29",
    "icecream<3.0.0,>=2.1.3",
    "toml<1.0.0,>=0.10.2",
    "tox<5.0.0,>=4.14.1",
    "poethepoet>=0.29.0",
    "bump-my-version>=0.28.0",
    "mistletoe>=1.4.0",
    "inquirer>=3.4.0",
    "colorama>=0.4.6",
]

[[tool.mypy.overrides]]
module = "ainconv"
ignore_missing_imports = true

[tool.bumpversion]
current_version = "0.6.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} â†’ {new_version}"
allow_dirty = false
commit = true
message = "Bump version to v{new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = ["uv sync", "git add uv.lock"]
post_commit_hooks = ["uv run poe tag"]

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = "## [{new_version}] - {now:%Y-%m-%d}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
